version: '3.5'

services:
  db:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authservice
    ports:
      - "5435:5432"
    healthcheck:
      test: [ 'CMD', 'pg_isready', '-q', '-d', 'authservice', '-U', 'postgres' ]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - my_network
networks:
  my_network:
    driver: bridge
# version: '3.5'
# services:
  # db:
    # container_name: pg_container
    # image: postgres
    # restart: always
    # environment:
      # POSTGRES_USER: postgres
      # POSTGRES_PASSWORD: postgres
      # POSTGRES_DB: authservice
    # ports:
      # - "5435:5432"
    # healthcheck:
      # test: [ 'CMD', 'pg_isready', '-q', '-d', 'authservice', '-U', 'postgres' ]
      # timeout: 45s
      # interval: 10s
      # retries: 10
    # networks:
      # - my_network
  # pgadmin:
    # container_name: pgadmin4_container
    # image: dpage/pgadmin4
    # restart: always
    # environment:
      # PGADMIN_DEFAULT_EMAIL: admin@admin.com
      # PGADMIN_DEFAULT_PASSWORD: root
    # ports:
      # - "5050:80"
    # networks:
      # - dbnet
  # networks:
    # my_network:
      # driver: bridgeversion: '3.5'
# services:
  # db:
    # container_name: pg_container
    # image: postgres
    # restart: always
    # environment:
      # POSTGRES_USER: postgres
      # POSTGRES_PASSWORD: postgres
      # POSTGRES_DB: authservice
    # ports:
      # - "5435:5432"
    # healthcheck:
      # test: [ 'CMD', 'pg_isready', '-q', '-d', 'authservice', '-U', 'postgres' ]
      # timeout: 45s
      # interval: 10s
      # retries: 10
    # networks:
      # - my_network
  # pgadmin:
    # container_name: pgadmin4_container
    # image: dpage/pgadmin4
    # restart: always
    # environment:
      # PGADMIN_DEFAULT_EMAIL: admin@admin.com
      # PGADMIN_DEFAULT_PASSWORD: root
    # ports:
      # - "5050:80"
    # networks:
      # - dbnet
  # networks:
    # my_network:
      # driver: bridge